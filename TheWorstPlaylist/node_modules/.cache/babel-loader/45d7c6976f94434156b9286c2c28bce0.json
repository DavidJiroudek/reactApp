{"ast":null,"code":"// const songReducer = (state = {}, action) =>{\n//     switch (action.type){\n//         case \"ADD\":\n//         return ({\n//             ...state,\n//             todos: [\n//                     ...state.songs,\n//                     {\n//                         id: action.payload.id,\n//                         name: action.payload.name,\n//                         url: action.payload.url,\n//                         source: action.payload.source,\n//                         priority: action.payload.priority\n//                     }\n//                     ]\n//             })\n//     }\n// }   \n// export default songReducer;\nimport { createSlice } from '@reduxjs/toolkit';\nexport const songSlice = createSlice({\n  name: 'songs',\n  initialState: {\n    value: [],\n    id: 0\n  },\n  reducers: {\n    addSong: (state, action) => {\n      state.value = [...state.value, {\n        id: ++state.value.id,\n        ...action.payload\n      }];\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addSong\n} = songSlice.actions;\nexport default songSlice.reducer;","map":{"version":3,"sources":["C:/Users/MyPreciousDesktop/Desktop/todolist/src/redux/reducers/songReducer.js"],"names":["createSlice","songSlice","name","initialState","value","id","reducers","addSong","state","action","payload","actions","reducer"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,OAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,EAAE,EAAE;AAFQ,GAFqB;AAMnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACvBD,MAAAA,KAAK,CAACJ,KAAN,GAAc,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAgB;AAACC,QAAAA,EAAE,EAAE,EAAEG,KAAK,CAACJ,KAAN,CAAYC,EAAnB;AAAsB,WAAGI,MAAM,CAACC;AAAhC,OAAhB,CAAd;AACH;AAHO;AANyB,CAAD,CAA7B,C,CAaP;;AACA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAcN,SAAS,CAACU,OAA9B;AAEP,eAAeV,SAAS,CAACW,OAAzB","sourcesContent":["// const songReducer = (state = {}, action) =>{\r\n//     switch (action.type){\r\n//         case \"ADD\":\r\n//         return ({\r\n//             ...state,\r\n//             todos: [\r\n//                     ...state.songs,\r\n//                     {\r\n//                         id: action.payload.id,\r\n//                         name: action.payload.name,\r\n//                         url: action.payload.url,\r\n//                         source: action.payload.source,\r\n//                         priority: action.payload.priority\r\n//                     }\r\n//                     ]\r\n//             })\r\n//     }\r\n// }   \r\n// export default songReducer;\r\n\r\n\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const songSlice = createSlice({\r\n  name: 'songs',\r\n  initialState: {\r\n    value: [],\r\n    id: 0\r\n            },\r\n  reducers: {\r\n    addSong: (state, action) =>{\r\n        state.value = [...state.value,{id: ++state.value.id,...action.payload}]\r\n    }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addSong } = songSlice.actions\r\n\r\nexport default songSlice.reducer"]},"metadata":{},"sourceType":"module"}