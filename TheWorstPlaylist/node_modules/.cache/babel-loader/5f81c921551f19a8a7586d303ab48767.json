{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyPreciousDesktop\\\\Desktop\\\\todolist\\\\src\\\\SongList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUrl } from \"./redux/reducers/activeUrlReducer\";\nimport { addSong, deleteSong } from \"./redux/reducers/songReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songStore.value);\n  useFetch(dispatch);\n  const jsxSongs = songs.map(i => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [i.songName, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(updateUrl({\n        url: i.url,\n        source: true\n      })),\n      children: \"P\\u0159ehr\\xE1t\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 64\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(deleteSong(i.id)),\n      children: \"Odstranit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 149\n    }, this)]\n  }, i.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 37\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: jsxSongs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongList, \"qkfKGV0CO76os2rPBfLMSO/0Jzc=\", false, function () {\n  return [useDispatch, useSelector, useFetch];\n});\n\n_c = SongList;\n\nconst useFetch = dispatch => {\n  _s2();\n\n  useEffect(() => {\n    fetch('http://localhost:3000/songs').then(response => response.json()).then(result => {\n      console.log(result);\n    });\n  }, []);\n};\n\n_s2(useFetch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default SongList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"sources":["C:/Users/MyPreciousDesktop/Desktop/todolist/src/SongList.js"],"names":["useEffect","useDispatch","useSelector","updateUrl","addSong","deleteSong","SongList","dispatch","songs","state","songStore","value","useFetch","jsxSongs","map","i","songName","url","source","id","fetch","then","response","json","result","console","log"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,8BAApC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBC,KAA5B,CAAzB;AACAC,EAAAA,QAAQ,CAACL,QAAD,CAAR;AACA,QAAMM,QAAQ,GAAGL,KAAK,CAACM,GAAN,CAAUC,CAAC,iBAAI;AAAA,eAAgBA,CAAC,CAACC,QAAlB,eAA2B;AAAQ,MAAA,OAAO,EAAE,MAAIT,QAAQ,CAACJ,SAAS,CAAC;AAACc,QAAAA,GAAG,EAACF,CAAC,CAACE,GAAP;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAD,CAAV,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B,eAAgH;AAAQ,MAAA,OAAO,EAAE,MAAIX,QAAQ,CAACF,UAAU,CAACU,CAAC,CAACI,EAAH,CAAX,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhH;AAAA,KAASJ,CAAC,CAACI,EAAX;AAAA;AAAA;AAAA;AAAA,UAAf,CAAjB;AACA,sBACI;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAVD;;GAAMP,Q;UACeL,W,EACHC,W,EACdU,Q;;;KAHEN,Q;;AAYN,MAAMM,QAAQ,GAAIL,QAAD,IAAa;AAAA;;AAC1BP,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA0CC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAtD,EACDF,IADC,CACKG,MAAD,IAAY;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAaF,MAAb;AAAqB,KADtC;AAIH,GALQ,EAKP,EALO,CAAT;AAOH,CARD;;IAAMZ,Q;;AASN,eAAeN,QAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { updateUrl } from \"./redux/reducers/activeUrlReducer\";\r\nimport { addSong, deleteSong } from \"./redux/reducers/songReducer\";\r\n\r\nconst SongList = () => {\r\n    const dispatch = useDispatch();\r\n    const songs = useSelector((state) => state.songStore.value)\r\n    useFetch(dispatch)\r\n    const jsxSongs = songs.map(i => <li key={i.id}>{i.songName}<button onClick={()=>dispatch(updateUrl({url:i.url, source: true}))}>Přehrát</button><button onClick={()=>dispatch(deleteSong(i.id))}>Odstranit</button></li>)\r\n    return(\r\n        <ol>\r\n            {jsxSongs}\r\n        </ol>\r\n    )\r\n}\r\n\r\nconst useFetch = (dispatch) =>{\r\n    useEffect(() => {\r\n        fetch('http://localhost:3000/songs').then(response => response.json())\r\n      .then((result) => {console.log( result)});\r\n\r\n\r\n    },[]);\r\n\r\n}\r\nexport default SongList"]},"metadata":{},"sourceType":"module"}