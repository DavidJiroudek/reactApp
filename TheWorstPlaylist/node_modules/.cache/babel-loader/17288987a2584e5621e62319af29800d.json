{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyPreciousDesktop\\\\Desktop\\\\todolist\\\\src\\\\SongList.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUrl } from \"./redux/reducers/activeUrlReducer\";\nimport { deleteSong } from \"./redux/reducers/songReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songStore.value);\n  const jsxSongs = songs.map(i => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [i.songName, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(updateUrl({\n        url: i.url,\n        source: false\n      })),\n      children: \"P\\u0159ehr\\xE1t\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 64\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(deleteSong(i.id)),\n      children: \"Odstranit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 150\n    }, this)]\n  }, i.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 37\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: jsxSongs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongList, \"DKrO70wI+fLb2pnZSPZaIrXIDXA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SongList;\nexport default SongList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"sources":["C:/Users/MyPreciousDesktop/Desktop/todolist/src/SongList.js"],"names":["useDispatch","useSelector","updateUrl","deleteSong","SongList","dispatch","songs","state","songStore","value","jsxSongs","map","i","songName","url","source","id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,UAAT,QAA2B,8BAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBC,KAA5B,CAAzB;AACA,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAUC,CAAC,iBAAI;AAAA,eAAgBA,CAAC,CAACC,QAAlB,eAA2B;AAAQ,MAAA,OAAO,EAAE,MAAIR,QAAQ,CAACH,SAAS,CAAC;AAACY,QAAAA,GAAG,EAACF,CAAC,CAACE,GAAP;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAD,CAAV,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B,eAAiH;AAAQ,MAAA,OAAO,EAAE,MAAIV,QAAQ,CAACF,UAAU,CAACS,CAAC,CAACI,EAAH,CAAX,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjH;AAAA,KAASJ,CAAC,CAACI,EAAX;AAAA;AAAA;AAAA;AAAA,UAAf,CAAjB;AACA,sBACI;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CATD;;GAAMN,Q;UACeJ,W,EACHC,W;;;KAFZG,Q;AAUN,eAAeA,QAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\"\r\nimport { updateUrl } from \"./redux/reducers/activeUrlReducer\";\r\nimport { deleteSong } from \"./redux/reducers/songReducer\";\r\n\r\nconst SongList = () => {\r\n    const dispatch = useDispatch();\r\n    const songs = useSelector((state) => state.songStore.value)\r\n    const jsxSongs = songs.map(i => <li key={i.id}>{i.songName}<button onClick={()=>dispatch(updateUrl({url:i.url, source: false}))}>Přehrát</button><button onClick={()=>dispatch(deleteSong(i.id))}>Odstranit</button></li>)\r\n    return(\r\n        <ol>\r\n            {jsxSongs}\r\n        </ol>\r\n    )\r\n}\r\nexport default SongList"]},"metadata":{},"sourceType":"module"}