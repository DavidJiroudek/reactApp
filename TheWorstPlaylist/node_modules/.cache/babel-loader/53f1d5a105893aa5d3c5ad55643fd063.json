{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const songSlice = createSlice({\n  name: 'songs',\n  initialState: {\n    value: []\n  },\n  reducers: {\n    addSong: (state, action) => {\n      state.value = [...state.value, {\n        id: state.value[state.value.length - 1] === undefined ? 0 : state.value[state.value.length - 1].id + 1,\n        ...action.payload\n      }];\n      fetch('http://localhost:9000/songs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(state.value[state.value.length - 1])\n      });\n    },\n    deleteSong: (state, action) => {\n      state.value = state.value.filter(i => i.id !== action.payload);\n    },\n    addSongsFromDB: (state, action) => {\n      state.value = [...action.payload];\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addSong,\n  deleteSong,\n  addSongsFromDB\n} = songSlice.actions;\nexport default songSlice.reducer;","map":{"version":3,"sources":["C:/Users/MyPreciousDesktop/Desktop/todolist/src/redux/reducers/songReducer.js"],"names":["createSlice","songSlice","name","initialState","value","reducers","addSong","state","action","id","length","undefined","payload","fetch","method","headers","body","JSON","stringify","deleteSong","filter","i","addSongsFromDB","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,OAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACvBD,MAAAA,KAAK,CAACH,KAAN,GAAc,CAAC,GAAGG,KAAK,CAACH,KAAV,EACE;AACIK,QAAAA,EAAE,EAAGF,KAAK,CAACH,KAAN,CAAYG,KAAK,CAACH,KAAN,CAAYM,MAAZ,GAAmB,CAA/B,MAAsCC,SAAtC,GAAkD,CAAlD,GAAuDJ,KAAK,CAACH,KAAN,CAAYG,KAAK,CAACH,KAAN,CAAYM,MAAZ,GAAmB,CAA/B,EAAkCD,EAAlC,GAAqC,CADrG;AAEG,WAAGD,MAAM,CAACI;AAFb,OADF,CAAd;AAMcC,MAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,QAAAA,MAAM,EAAE,MADyB;AAEjCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFwB;AAGjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,KAAK,CAACH,KAAN,CAAYG,KAAK,CAACH,KAAN,CAAYM,MAAZ,GAAmB,CAA/B,CAAf;AAH2B,OAAhC,CAAL;AAIjB,KAZK;AAaNS,IAAAA,UAAU,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AAE7BD,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBC,CAAC,IAAEA,CAAC,CAACZ,EAAF,KAASD,MAAM,CAACI,OAAtC,CAAd;AACD,KAhBK;AAiBNU,IAAAA,cAAc,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAiB;AAC/BD,MAAAA,KAAK,CAACH,KAAN,GAAc,CAAC,GAAGI,MAAM,CAACI,OAAX,CAAd;AACD;AAnBK;AALyB,CAAD,CAA7B,C,CA4BP;;AACA,OAAO,MAAM;AAAEN,EAAAA,OAAF;AAAWa,EAAAA,UAAX;AAAuBG,EAAAA;AAAvB,IAAyCrB,SAAS,CAACsB,OAAzD;AAEP,eAAetB,SAAS,CAACuB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const songSlice = createSlice({\r\n  name: 'songs',\r\n  initialState: {\r\n    value: []\r\n            },\r\n  reducers: {\r\n      addSong: (state, action) =>{\r\n          state.value = [...state.value,\r\n                          {\r\n                              id: (state.value[state.value.length-1] === undefined ? 0 : (state.value[state.value.length-1].id+1))\r\n                            ,...action.payload\r\n                          }\r\n                        ]\r\n                        fetch('http://localhost:9000/songs', {\r\n                            method: 'POST', \r\n                            headers: { 'Content-Type': 'application/json'},\r\n                            body: JSON.stringify(state.value[state.value.length-1]) })\r\n      },\r\n      deleteSong: (state, action) => {\r\n        \r\n        state.value = state.value.filter(i=>i.id !== action.payload)\r\n      },\r\n      addSongsFromDB: (state, action)=>{\r\n        state.value = [...action.payload]\r\n      }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addSong, deleteSong, addSongsFromDB} = songSlice.actions\r\n\r\nexport default songSlice.reducer"]},"metadata":{},"sourceType":"module"}