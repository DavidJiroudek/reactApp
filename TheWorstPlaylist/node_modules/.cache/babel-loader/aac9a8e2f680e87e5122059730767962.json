{"ast":null,"code":"// const songReducer = (state = {}, action) =>{\n//     switch (action.type){\n//         case \"ADD\":\n//         return ({\n//             ...state,\n//             todos: [\n//                     ...state.songs,\n//                     {\n//                         id: action.payload.id,\n//                         name: action.payload.name,\n//                         url: action.payload.url,\n//                         source: action.payload.source,\n//                         priority: action.payload.priority\n//                     }\n//                     ]\n//             })\n//     }\n// }   \n// export default songReducer;\nimport { createSlice } from '@reduxjs/toolkit';\nexport const songSlice = createSlice({\n  name: 'songs',\n  initialState: {\n    value: []\n  },\n  reducers: {\n    addSong: (state, action) => {\n      var _state$value$id;\n\n      state.value = [...state.value, {\n        id: (_state$value$id = state.value[state.value.length - 1].id) !== null && _state$value$id !== void 0 ? _state$value$id : 0,\n        ...action.payload\n      }];\n    },\n    deleteSong: (state, action) => {\n      state.value = state.value.splice(action.payload);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addSong\n} = songSlice.actions;\nexport default songSlice.reducer;","map":{"version":3,"sources":["C:/Users/MyPreciousDesktop/Desktop/todolist/src/redux/reducers/songReducer.js"],"names":["createSlice","songSlice","name","initialState","value","reducers","addSong","state","action","id","length","payload","deleteSong","splice","actions","reducer"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,OAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAAA;;AACvBD,MAAAA,KAAK,CAACH,KAAN,GAAc,CAAC,GAAGG,KAAK,CAACH,KAAV,EACE;AACIK,QAAAA,EAAE,qBAAGF,KAAK,CAACH,KAAN,CAAYG,KAAK,CAACH,KAAN,CAAYM,MAAZ,GAAmB,CAA/B,EAAkCD,EAArC,6DAA2C,CADjD;AAEG,WAAGD,MAAM,CAACG;AAFb,OADF,CAAd;AAMH,KARK;AASNC,IAAAA,UAAU,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAmBL,MAAM,CAACG,OAA1B,CAAd;AACH;AAXK;AALyB,CAAD,CAA7B,C,CAoBP;;AACA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAcL,SAAS,CAACa,OAA9B;AAEP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["// const songReducer = (state = {}, action) =>{\r\n//     switch (action.type){\r\n//         case \"ADD\":\r\n//         return ({\r\n//             ...state,\r\n//             todos: [\r\n//                     ...state.songs,\r\n//                     {\r\n//                         id: action.payload.id,\r\n//                         name: action.payload.name,\r\n//                         url: action.payload.url,\r\n//                         source: action.payload.source,\r\n//                         priority: action.payload.priority\r\n//                     }\r\n//                     ]\r\n//             })\r\n//     }\r\n// }   \r\n// export default songReducer;\r\n\r\n\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const songSlice = createSlice({\r\n  name: 'songs',\r\n  initialState: {\r\n    value: []\r\n            },\r\n  reducers: {\r\n      addSong: (state, action) =>{\r\n          state.value = [...state.value,\r\n                          {\r\n                              id: (state.value[state.value.length-1].id ?? 0)\r\n                            ,...action.payload\r\n                          }\r\n                        ]\r\n      },\r\n      deleteSong: (state, action) => {\r\n          state.value = state.value.splice(action.payload)\r\n      }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addSong } = songSlice.actions\r\n\r\nexport default songSlice.reducer"]},"metadata":{},"sourceType":"module"}