{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyPreciousDesktop\\\\Desktop\\\\todolist\\\\src\\\\SongForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addSong } from \"./redux/reducers/songReducer\";\nimport \"./SongForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"addSongForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"songName\",\n        type: \"text\",\n        placeholder: \"N\\xE1zev p\\xEDsn\\u011B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"url\",\n        type: \"text\",\n        placeholder: \"Url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"sourceYouTube\",\n          name: \"source\",\n          value: \"YouTube\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sourceYouTube\",\n          children: \"YouTube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"sourceSpotify\",\n          name: \"source\",\n          value: \"Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sourceSpotify\",\n          children: \"Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"P\\u0159idat p\\xEDse\\u0148\",\n        onClick: () => dispatch(addSong(getData(priority)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongForm, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SongForm;\n\nconst getData = priority => {\n  return {\n    songName: document.getElementById(\"songName\").value,\n    url: document.getElementById(\"url\").value,\n    source: document.getElementById(\"sourceSpotify\").checked\n  };\n};\n\nexport default SongForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongForm\");","map":{"version":3,"sources":["C:/Users/MyPreciousDesktop/Desktop/todolist/src/SongForm.js"],"names":["useState","useDispatch","addSong","SongForm","dispatch","getData","priority","songName","document","getElementById","value","url","source","checked"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,gBAAP;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,8BACI;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,WAAW,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,EAAE,EAAC,KAAV;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,WAAW,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,eAAvB;AAAuC,UAAA,IAAI,EAAC,QAA5C;AAAqD,UAAA,KAAK,EAAE,SAA5D;AAAsE,UAAA,cAAc;AAApF;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAOI;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,eAAvB;AAAuC,UAAA,IAAI,EAAC,QAA5C;AAAqD,UAAA,KAAK,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAoB,QAAA,KAAK,EAAC,2BAA1B;AAAyC,QAAA,OAAO,EAAE,MAAMG,QAAQ,CAACF,OAAO,CAACG,OAAO,CAACC,QAAD,CAAR,CAAR;AAAhE;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CArBD;;GAAMH,Q;UACeF,W;;;KADfE,Q;;AAuBN,MAAME,OAAO,GAAIC,QAAD,IAAa;AACzB,SAAM;AAAGC,IAAAA,QAAQ,EAAEC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAAjD;AACUC,IAAAA,GAAG,EAAEH,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAD9C;AAEUE,IAAAA,MAAM,EAAEJ,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCI;AAF3D,GAAN;AAKH,CAND;;AAOA,eAAeV,QAAf","sourcesContent":["import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addSong } from \"./redux/reducers/songReducer\";\r\nimport \"./SongForm.css\"\r\nconst SongForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return(\r\n        <div>\r\n            <form className=\"addSongForm\">\r\n                <input id=\"songName\" type=\"text\" placeholder =\"Název písně\"></input>\r\n                <input id=\"url\" type=\"text\" placeholder =\"Url\"></input>\r\n                <div>\r\n                <input type=\"radio\" id=\"sourceYouTube\" name=\"source\" value =\"YouTube\" defaultChecked ></input>\r\n                <label htmlFor=\"sourceYouTube\">YouTube</label>\r\n                </div>\r\n                <div>\r\n                <input type=\"radio\" id=\"sourceSpotify\" name=\"source\" value =\"Spotify\"></input>\r\n                <label htmlFor=\"sourceSpotify\">Spotify</label>\r\n                </div>\r\n                <input type=\"button\"value=\"Přidat píseň\" onClick={() => dispatch(addSong(getData(priority)))}></input>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getData = (priority) =>{\r\n    return{  songName: document.getElementById(\"songName\").value,\r\n                    url: document.getElementById(\"url\").value,\r\n                    source: document.getElementById(\"sourceSpotify\").checked}\r\n\r\n\r\n}\r\nexport default SongForm"]},"metadata":{},"sourceType":"module"}